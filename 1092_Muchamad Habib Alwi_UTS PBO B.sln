using System;
using System.Threading;

namespace RobotBattleSimulator
{
    // Interface untuk kemampuan
    public interface IKemampuan
    {
        void GunakanKemampuan(Robot robot, Robot target);
        string Nama { get; }
        int Cooldown { get; }
        void UpdateCooldown();
    }

    // Abstract class Robot
    public abstract class Robot
    {
        public string Nama { get; protected set; }
        public int Energi { get; private set; }
        public int Armor { get; private set; }
        public int Serangan { get; protected set; }

        protected Robot(string nama, int energi, int armor, int serangan)
        {
            Nama = nama;
            Energi = energi;
            Armor = armor;
            Serangan = serangan;
        }

        public virtual void Serang(Robot target)
        {
            int damage = Serangan - target.Armor;
            damage = damage > 0 ? damage : 0; // Pastikan damage tidak negatif
            target.KurangiEnergi(damage);
            Console.WriteLine($"{Nama} menyerang {target.Nama} dan menyebabkan {damage} damage.");
        }

        public void KurangiEnergi(int amount)
        {
            Energi -= amount;
            if (Energi < 0) Energi = 0; // Pastikan energi tidak negatif
        }

        public void TambahEnergi(int amount)
        {
            Energi += amount;
        }

        public void TambahArmor(int amount)
        {
            Armor += amount;
        }

        public abstract void GunakanKemampuan(IKemampuan kemampuan, Robot target);

        public void CetakInformasi()
        {
            Console.WriteLine($"Nama: {Nama}, Energi: {Energi}, Armor: {Armor}, Serangan: {Serangan}");
        }
    }

    // Kelas Robot Biasa
    public class RobotBiasa : Robot
    {
        public RobotBiasa(string nama, int energi, int armor, int serangan)
            : base(nama, energi, armor, serangan) { }

        public override void GunakanKemampuan(IKemampuan kemampuan, Robot target)
        {
            kemampuan.GunakanKemampuan(this, target);
        }
    }

    // Kelas Bos Robot
    public class BosRobot : Robot
    {
        public BosRobot(string nama, int energi, int armor, int serangan)
            : base(nama, energi, armor * 2, serangan) { } // Armor lebih besar

        public override void GunakanKemampuan(IKemampuan kemampuan, Robot target)
        {
            kemampuan.GunakanKemampuan(this, target);
        }

        public void Diserang(Robot penyerang)
        {
            int damage = penyerang.Serangan;
            KurangiEnergi(damage);
            Console.WriteLine($"{penyerang.Nama} menyerang {Nama} dan menyebabkan {damage} damage.");
            if (Energi <= 0)
            {
                Mati();
            }
        }

        public void Mati()
        {
            Console.WriteLine($"{Nama} telah mati.");
        }
    }

    // Beberapa kemampuan
    public class Repair : IKemampuan
    {
        public string Nama => "Perbaikan";
        public int Cooldown => 3;
        private int cooldownCounter = 0;

        public void GunakanKemampuan(Robot robot, Robot target)
        {
            if (cooldownCounter == 0)
            {
                robot.TambahEnergi(20);
                Console.WriteLine($"{robot.Nama} menggunakan {Nama} dan memulihkan 20 energi.");
                cooldownCounter = Cooldown;
            }
            else
            {
                Console.WriteLine($"{Nama} sedang cooldown selama {cooldownCounter} turn.");
            }
        }

        public void UpdateCooldown()
        {
            if (cooldownCounter > 0)
                cooldownCounter--;
        }
    }

    public class ElectricShock : IKemampuan
    {
        public string Nama => "Serangan Listrik";
        public int Cooldown => 2;
        private int cooldownCounter = 0;

        public void GunakanKemampuan(Robot robot, Robot target)
        {
            if (cooldownCounter == 0)
            {
                Console.WriteLine($"{robot.Nama} menggunakan {Nama} dan menyerang {target.Nama}!");
                target.KurangiEnergi(15); // Misalkan serangan listrik mengurangi 15 energi
                cooldownCounter = Cooldown;
            }
            else
            {
                Console.WriteLine($"{Nama} sedang cooldown selama {cooldownCounter} turn.");
            }
        }

        public void UpdateCooldown()
        {
            if (cooldownCounter > 0)
                cooldownCounter--;
        }
    }

    public class PlasmaCannon : IKemampuan
    {
        public string Nama => "Serangan Plasma";
        public int Cooldown => 4;
        private int cooldownCounter = 0;

        public void GunakanKemampuan(Robot robot, Robot target)
        {
            if (cooldownCounter == 0)
            {
                Console.WriteLine($"{robot.Nama} menggunakan {Nama} dan menyerang {target.Nama}!");
                target.KurangiEnergi(30); // Misalkan serangan plasma mengurangi 30 energi
                cooldownCounter = Cooldown;
            }
            else
            {
                Console.WriteLine($"{Nama} sedang cooldown selama {cooldownCounter} turn.");
            }
        }

        public void UpdateCooldown()
        {
            if (cooldownCounter > 0)
                cooldownCounter--;
        }
    }

    public class SuperShield : IKemampuan
    {
        public string Nama => "Pertahanan Super";
        public int Cooldown => 5;
        private int cooldownCounter = 0;

        public void GunakanKemampuan(Robot robot, Robot target)
        {
            if (cooldownCounter == 0)
            {
                robot.TambahArmor(10);
                Console.WriteLine($"{robot.Nama} menggunakan {Nama} dan meningkatkan armor sebesar 10.");
                cooldownCounter = Cooldown;
            }
            else
            {
                Console.WriteLine($"{Nama} sedang cooldown selama {cooldownCounter} turn.");
            }
        }

        public void UpdateCooldown()
        {
            if (cooldownCounter > 0)
                cooldownCounter--;
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            // Buat beberapa robot
            RobotBiasa robot1 = new RobotBiasa("Robot 1", 100, 10, 20);
            RobotBiasa robot2 = new RobotBiasa("Robot 2", 120, 15, 25);
            BosRobot bos = new BosRobot("Bos Robot", 200, 20, 30);

            // Buat beberapa kemampuan
            IKemampuan repair = new Repair();
            IKemampuan electricShock = new ElectricShock();
            IKemampuan plasmaCannon = new PlasmaCannon();
            IKemampuan superShield = new SuperShield();

            // Mulai permainan
            while (true)
            {
                Console.WriteLine("Giliran Anda:");
                Console.WriteLine("1. Robot 1");
                Console.WriteLine("2. Robot 2");
                Console.WriteLine("3. Bos Robot");
                Console.Write("Pilih robot: ");
                int choice = Convert.ToInt32(Console.ReadLine());

                Robot currentRobot;
                switch (choice)
                {
                    case 1:
                        currentRobot = robot1;
                        break;
                    case 2:
                        currentRobot = robot2;
                        break;
                    case 3:
                        currentRobot = bos;
                        break;
                    default:
                        Console.WriteLine("Pilihan tidak valid.");
                        continue;
                }

                Console.WriteLine("Pilih kemampuan:");
                Console.WriteLine("1. Perbaikan");
                Console.WriteLine("2. Serangan Listrik");
                Console.WriteLine("3. Serangan Plasma");
                Console.WriteLine("4. Pertahanan Super");
                Console.Write("Pilih kemampuan: ");
                int skillChoice = Convert.ToInt32(Console.ReadLine());

                IKemampuan chosenSkill;
                switch (skillChoice)
                {
                    case 1:
                        chosenSkill = repair;
                        break;
                    case 2:
                        chosenSkill = electricShock;
                        break;
                    case 3:
                        chosenSkill = plasmaCannon;
                        break;
                    case 4:
                        chosenSkill = superShield;
                        break;
                    default:
                        Console.WriteLine("Pilihan tidak valid.");
                        continue;
                }

                Console.Write("Pilih target: ");
                int targetChoice = Convert.ToInt32(Console.ReadLine());

                Robot target;
                switch (targetChoice)
                {
                    case 1:
                        target = robot1;
                        break;
                    case 2:
                        target = robot2;
                        break;
                    case 3:
                        target = bos;
                        break;
                    default:
                        Console.WriteLine("Pilihan tidak valid.");
                        continue;
                }

                currentRobot.GunakanKemampuan(chosenSkill, target);

                // Update cooldown
                repair.UpdateCooldown();
                electricShock.UpdateCooldown();
                plasmaCannon.UpdateCooldown();
                superShield.UpdateCooldown();

                // Cetak informasi robot
                currentRobot.CetakInformasi();
                target.CetakInformasi();

                // Cek apakah bos robot telah mati
                if (bos.Energi <= 0)
                {
                    Console.WriteLine("Bos Robot telah mati. Permainan selesai.");
                    break;
                }

                // Tunda sebentar sebelum giliran berikutnya
                Thread.Sleep(1000);
            }
        }
    }
}
